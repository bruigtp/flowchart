[{"path":"https://bruigtp.github.io/flowchart/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://bruigtp.github.io/flowchart/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://bruigtp.github.io/flowchart/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://bruigtp.github.io/flowchart/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://bruigtp.github.io/flowchart/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://bruigtp.github.io/flowchart/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://bruigtp.github.io/flowchart/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://bruigtp.github.io/flowchart/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://bruigtp.github.io/flowchart/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://bruigtp.github.io/flowchart/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://bruigtp.github.io/flowchart/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://bruigtp.github.io/flowchart/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://bruigtp.github.io/flowchart/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://bruigtp.github.io/flowchart/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://bruigtp.github.io/flowchart/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://bruigtp.github.io/flowchart/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://bruigtp.github.io/flowchart/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://bruigtp.github.io/flowchart/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://bruigtp.github.io/flowchart/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://bruigtp.github.io/flowchart/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://bruigtp.github.io/flowchart/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://bruigtp.github.io/flowchart/articles/flowchart.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"flowchart","text":"flowchart package drawing participant flow diagrams directly dataframe using tidyverse. provides set functions can combined |> create kinds flowcharts dataframe easy way: as_fc() transforms dataframe fc object can manipulated package. fc_split() splits flowchart according different values column dataframe. fc_filter() creates filtered box flowchart, based evaluation expression dataframe. fc_merge() combines horizontally two different flowcharts. fc_stack() combines vertically two different flowcharts. fc_modify() allows modify parameters flowchart stored .$fc. fc_draw() draws flowchart created previous functions. fc_export() allows export flowchart drawn desired format.","code":""},{"path":"https://bruigtp.github.io/flowchart/articles/flowchart.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"flowchart","text":"can install stable version CRAN: development version GitHub:","code":"install.packages(\"flowchart\") # install.packages(\"remotes\") remotes::install_github('bruigtp/flowchart')"},{"path":"https://bruigtp.github.io/flowchart/articles/flowchart.html","id":"safo-dataset","dir":"Articles","previous_headings":"","what":"safo dataset","title":"flowchart","text":"use built-dataset safo, randomly generated dataset SAFO trial1. SAFO open-label, multicentre, phase III–IV superiority randomised clinical trial designed assess whether cloxacillin plus fosfomycin administered first 7 days therapy achieves better treatment outcomes cloxacillin alone hospitalised patients meticillin-sensitive Staphylococcus aureus bacteraemia.","code":"library(flowchart)  data(safo)  head(safo) ## # A tibble: 6 × 21 ##      id inclusion_crit exclusion_crit chronic_heart_failure expected_death_24h ##   <int> <fct>          <fct>          <fct>                 <fct>              ## 1     1 Yes            No             No                    No                 ## 2     2 No             No             No                    No                 ## 3     3 No             No             No                    No                 ## 4     4 No             Yes            No                    No                 ## 5     5 No             No             No                    No                 ## 6     6 No             Yes            No                    No                 ## # ℹ 16 more variables: polymicrobial_bacteremia <fct>, ## #   conditions_affect_adhrence <fct>, susp_prosthetic_valve_endocard <fct>, ## #   severe_liver_cirrhosis <fct>, acute_sars_cov2 <fct>, ## #   blactam_fosfomycin_hypersens <fct>, other_clinical_trial <fct>, ## #   pregnancy_or_breastfeeding <fct>, previous_participation <fct>, ## #   myasthenia_gravis <fct>, decline_part <fct>, group <fct>, itt <fct>, ## #   reason_itt <fct>, pp <fct>, reason_pp <fct>"},{"path":"https://bruigtp.github.io/flowchart/articles/flowchart.html","id":"basic-operations","dir":"Articles","previous_headings":"","what":"Basic operations","title":"flowchart","text":"first step initialise flowchart as_fc. last step, want visualise created flowchart, draw flowchart fc_draw. can combine functions fc_split., fc_filter, fc_merge, fc_stack operator pipe (|> %>$) create complex flowchart structures.","code":""},{"path":"https://bruigtp.github.io/flowchart/articles/flowchart.html","id":"initialize","dir":"Articles","previous_headings":"Basic operations","what":"Initialize","title":"flowchart","text":"initialize flowchart dataset use as_fc() function: safo_fc object created fc object, consists list containing tibble dataframe associated flowchart tibble stores flowchart parameters. example, safo_fc$data corresponds safo dataset safo_fc$fc contains parameters initial flowchart: Alternatively, dataframe available, can initialize flowchart using N = argument manually specifying number rows:","code":"safo_fc <- safo |>    as_fc()  str(safo_fc, max.level = 1) ## List of 2 ##  $ data: tibble [925 × 21] (S3: tbl_df/tbl/data.frame) ##  $ fc  : tibble [1 × 17] (S3: tbl_df/tbl/data.frame) ##  - attr(*, \"class\")= chr \"fc\" safo_fc$fc ## # A tibble: 1 × 17 ##      id     x     y     n     N perc  text  type  group just  text_color text_fs ##   <dbl> <dbl> <dbl> <int> <int> <chr> <chr> <chr> <lgl> <chr> <chr>        <dbl> ## 1     1   0.5   0.5   925   925 100   \"Ini… init  NA    cent… black            8 ## # ℹ 5 more variables: text_fface <dbl>, text_ffamily <lgl>, text_padding <dbl>, ## #   bg_fill <chr>, border_color <chr>"},{"path":"https://bruigtp.github.io/flowchart/articles/flowchart.html","id":"draw","dir":"Articles","previous_headings":"Basic operations","what":"Draw","title":"flowchart","text":"function fc_draw() allows draw flowchart associated fc object. Following last example, can draw initial flowchart previously created:","code":"safo_fc |>    fc_draw()"},{"path":"https://bruigtp.github.io/flowchart/articles/flowchart.html","id":"filter","dir":"Articles","previous_headings":"Basic operations","what":"Filter","title":"flowchart","text":"can filter flowchart using fc_filter() specifying logic filter applied. example, can show number patients randomized study:  Percentages calculated box previous level. See ‘Modify function arguments’ information label= show_exc= arguments. Alternatively, column filter available, can use N = argument manually specify number rows resulting filter:","code":"safo |>    as_fc(label = \"Patients assessed for eligibility\") |>    fc_filter(!is.na(group), label = \"Randomized\", show_exc = TRUE) |>    fc_draw() safo |>    as_fc(label = \"Patients assessed for eligibility\") |>    fc_filter(N = 215, label = \"Randomized\", show_exc = TRUE) |>    fc_draw()"},{"path":"https://bruigtp.github.io/flowchart/articles/flowchart.html","id":"split","dir":"Articles","previous_headings":"Basic operations","what":"Split","title":"flowchart","text":"can split flowchart groups using fc_split() specifying grouping variable. function split flowchart many categories specified variable . example, can split previous flowchart showing patients allocated two study treatments:  Percentages calculated box previous level. Alternatively, column split available, can use N = argument manually specify number rows group resulting split:","code":"safo |>   dplyr::filter(!is.na(group)) |>   as_fc(label = \"Randomized patients\") |>   fc_split(group) |>   fc_draw() safo |>   dplyr::filter(!is.na(group)) |>   as_fc(label = \"Randomized patients\") |>   fc_split(N = c(105, 110), label = c(\"cloxacillin plus fosfomycin\", \"cloxacillin alone\")) |>    fc_draw()"},{"path":"https://bruigtp.github.io/flowchart/articles/flowchart.html","id":"customize-output","dir":"Articles","previous_headings":"","what":"Customize output","title":"flowchart","text":"can customize flowchart either arguments provided function process creating , directly final output using function fc_modify. can also change box style boxes flowchart using argument fc_draw.","code":""},{"path":"https://bruigtp.github.io/flowchart/articles/flowchart.html","id":"change-function-arguments","dir":"Articles","previous_headings":"Customize output","what":"Change function arguments","title":"flowchart","text":"many different arguments as_fc(), fc_filter(), fc_split(), fc_draw() allow customize boxes created step. Examples use arguments given end vignette: Customization examples.","code":""},{"path":"https://bruigtp.github.io/flowchart/articles/flowchart.html","id":"function-to-customize-the-flowchart","dir":"Articles","previous_headings":"Customize output","what":"Function to customize the flowchart","title":"flowchart","text":"function fc_modify allows user customise created flowchart modifying parameters, stored .$fc. example, let’s customize following flowchart:  Previous modifying , can use function fc_view() inspect element $fc want change: Let’s customise text exclusion box (id = 3) specify different reasons exclusion, change x y coordinate:","code":"safo_fc <- safo |>    as_fc(label = \"Patients assessed for eligibility\") |>   fc_filter(!is.na(group), label = \"Randomized\", show_exc = TRUE)   safo_fc |>    fc_draw() safo_fc |>    fc_view(\"fc\") ## # A tibble: 3 × 17 ##      id     x     y     n     N perc  text  type  group just  text_color text_fs ##   <int> <dbl> <dbl> <int> <int> <chr> <chr> <chr> <lgl> <chr> <chr>        <dbl> ## 1     1  0.5  0.667   925   925 100   \"Pat… init  NA    cent… black            8 ## 2     2  0.5  0.333   215   925 23.24 \"Ran… filt… NA    cent… black            8 ## 3     3  0.65 0.5     710   925 76.76 \"Exc… excl… NA    cent… black            6 ## # ℹ 5 more variables: text_fface <dbl>, text_ffamily <lgl>, text_padding <dbl>, ## #   bg_fill <chr>, border_color <chr> safo_fc |>    fc_modify(     ~ . |>        mutate(         text = ifelse(id == 3, str_glue(\"- {sum(safo$inclusion_crit == 'Yes')} not met the inclusion criteria\\n- {sum(safo$exclusion_crit == 'Yes')} met the exclusion criteria\"), text),         x = case_when(           id == 3 ~ 0.75,           TRUE ~ x         ),         y = case_when(           id == 1 ~ 0.8,           id == 2 ~ 0.2,           TRUE ~ y         )       )   ) |>    fc_draw()"},{"path":"https://bruigtp.github.io/flowchart/articles/flowchart.html","id":"combine","dir":"Articles","previous_headings":"","what":"Combine","title":"flowchart","text":"fc_merge() fc_stack() allow combine different flowcharts horizontally vertically. useful need combine flowcharts generated different dataframes, shown .","code":""},{"path":"https://bruigtp.github.io/flowchart/articles/flowchart.html","id":"merge","dir":"Articles","previous_headings":"Combine","what":"Merge","title":"flowchart","text":"can combine different flowcharts horizontally using fc_merge(). example, might want represent flow patients included ITT population flow patients included PP population.","code":"# Create first flowchart for ITT fc1 <- safo |>    as_fc(label = \"Patients assessed for eligibility\") |>   fc_filter(itt == \"Yes\", label = \"Intention to treat (ITT)\")  fc_draw(fc1) # Create second flowchart for visits fc2 <- safo |>    as_fc(label = \"Patients assessed for eligibility\") |>   fc_filter(pp == \"Yes\", label = \"Per protocol (PP)\")  fc_draw(fc2) list(fc1, fc2) |>    fc_merge() |>    fc_draw()"},{"path":"https://bruigtp.github.io/flowchart/articles/flowchart.html","id":"stack","dir":"Articles","previous_headings":"Combine","what":"Stack","title":"flowchart","text":"can combine different flowcharts vertically using fc_stack(). example, can combine two flowcharts vertically instead horizontally.  can use argument unite = TRUE connect two stacked flowcharts. example:","code":"list(fc1, fc2) |>    fc_stack() |>    fc_draw() fc1 <- fc1 |>    fc_split(group)  list(fc1, fc2) |>    fc_stack(unite = TRUE) |>    fc_draw()"},{"path":"https://bruigtp.github.io/flowchart/articles/flowchart.html","id":"export","dir":"Articles","previous_headings":"","what":"Export","title":"flowchart","text":"flowchart drawn can export popular image formats, including bitmap (png, jpeg, tiff, bmp) vector (svg, pdf) formats, using fc_export(): can change size resolution stored image.","code":"safo |>    as_fc(label = \"Patients assessed for eligibility\") |>   fc_filter(!is.na(group), label = \"Randomized\", show_exc = TRUE) |>    fc_draw() |>    fc_export(\"flowchart.png\") safo |>    as_fc(label = \"Patients assessed for eligibility\") |>   fc_filter(!is.na(group), label = \"Randomized\", show_exc = TRUE) |>    fc_draw() |>    fc_export(\"flowchart.png\", width = 3000, height = 4000, res = 700)"},{"path":[]},{"path":"https://bruigtp.github.io/flowchart/articles/flowchart.html","id":"example-1","dir":"Articles","previous_headings":"Examples","what":"Example 1","title":"flowchart","text":"example, try create flowchart complete flow patients SAFO study:","code":"safo |>    as_fc(label = \"Patients assessed for eligibility\") |>   fc_filter(!is.na(group), label = \"Randomized\", show_exc = TRUE) |>    fc_split(group) |>    fc_filter(itt == \"Yes\", label = \"Included in ITT\") |>    fc_filter(pp == \"Yes\", label = \"Included in PP\") |>    fc_draw()"},{"path":"https://bruigtp.github.io/flowchart/articles/flowchart.html","id":"example-2","dir":"Articles","previous_headings":"Examples","what":"Example 2","title":"flowchart","text":"example, try exactly reproduce original flowchart SAFO study published Nature Medicine: SAFO flowchart. First, need pre-processing reproduce text larger boxes: Second, let’s create customise flowchart using functions package:","code":"# Create labels for exclusion box: label_exc <- paste(   c(str_glue(\"{sum(safo$inclusion_crit == 'Yes' | safo$exclusion_crit == 'Yes' | safo$decline_part == 'Yes', na.rm = T)} excluded:\"),     map_chr(c(\"inclusion_crit\", \"decline_part\", \"exclusion_crit\"), ~str_glue(\"{sum(safo[[.x]] == 'Yes', na.rm = TRUE)} {attr(safo[[.x]], 'label')}\")),     map_chr(4:15, ~str_glue(\" -  {sum(safo[[.x]] == 'Yes')} {attr(safo[[.x]], 'label')}\"))),   collapse = \"\\n\")  label_exc <- gsub(\"exclusion criteria\", \"exclusion criteria:\", label_exc)  safo1 <- safo |>    filter(group == \"cloxacillin alone\", !is.na(reason_pp)) |>    mutate(reason_pp = droplevels(reason_pp))  label_exc1 <- paste(   c(str_glue(\"{nrow(safo1)} excluded:\"),     map_chr(levels(safo1$reason_pp), ~str_glue(\" -  {sum(safo1$reason_pp == .x)} {.x}\"))),   collapse = \"\\n\")  label_exc1 <- str_replace_all(label_exc1, c(\"resistant\" = \"resistant\\n\", \"blood\" = \"blood\\n\"))  safo2 <- safo |>    filter(group == \"cloxacillin plus fosfomycin\", !is.na(reason_pp)) |>    mutate(reason_pp = droplevels(reason_pp))  label_exc2 <- paste(   c(str_glue(\"{nrow(safo2)} excluded:\"),     map_chr(levels(safo2$reason_pp), ~str_glue(\" -  {sum(safo2$reason_pp == .x)} {.x}\"))),   collapse = \"\\n\")  label_exc2 <- str_replace_all(label_exc2, c(\"nosocomial\" = \"nosocomial\\n\", \"treatment\" = \"treatment\\n\")) safo |>    as_fc(label = \"patients assessed for eligibility\", text_pattern = \"{N} {label}\") |>    fc_filter(!is.na(group), label = \"randomized\", text_pattern = \"{n} {label}\", show_exc = TRUE,             just_exc = \"left\", text_pattern_exc = \"{label}\", label_exc = label_exc, text_fs_exc = 7) |>   fc_split(group, text_pattern = \"{n} asssigned\\n {label}\") |>    fc_filter(itt == \"Yes\", label = \"included in intention-to-treat\\n population\", show_exc = TRUE,              text_pattern = \"{n} {label}\",              label_exc = \"patient did not receive allocated\\n treatment (withdrew consent)\",              text_pattern_exc = \"{n} {label}\", text_fs_exc = 7) |>   fc_filter(pp == \"Yes\", label = \"included in per-protocol\\n population\", show_exc = TRUE,             just_exc = \"left\", text_pattern = \"{n} {label}\", text_fs_exc = 7) |>    fc_modify(     ~.x |>        filter(n != 0) |>        mutate(         text = case_when(id == 11 ~ label_exc1, id == 13 ~ label_exc2, TRUE ~ text),         x = case_when(id == 3 ~ x + 0.15, id %in% c(11, 13) ~ x + 0.01, TRUE ~ x),         y = case_when(id %in% c(1, 3) ~ y + 0.05, id >= 2 ~ y - 0.05, TRUE ~ y)       )   ) |>    fc_draw()"},{"path":"https://bruigtp.github.io/flowchart/articles/flowchart.html","id":"example-3","dir":"Articles","previous_headings":"Examples","what":"Example 3","title":"flowchart","text":"example, create flowchart without dataframe, using N argument manually specify numbers display boxes:","code":"as_fc(N = 300) |>    fc_filter(N = 240, label = \"Randomized patients\", show_exc = TRUE) |>    fc_split(N = c(100, 80, 60), label = c(\"Group A\", \"Group B\", \"Group C\")) |>   fc_filter(N = c(80, 75, 50), label = \"Finished the study\") |>    fc_draw()"},{"path":"https://bruigtp.github.io/flowchart/articles/flowchart.html","id":"example-4","dir":"Articles","previous_headings":"Examples","what":"Example 4","title":"flowchart","text":"use N= argument can combined use dataframe. example, use N= argument flowchart uses dataframe:","code":"safo |>    as_fc(label = \"Patients assessed for eligibility\") |>   fc_filter(!is.na(group), label = \"Randomized\", show_exc = TRUE) |>    fc_split(group) |>    fc_split(N = c(50, 55, 10, 100), label = c(\"Group A\", \"Group B\")) |>    fc_draw()"},{"path":"https://bruigtp.github.io/flowchart/articles/flowchart.html","id":"customization-examples","dir":"Articles","previous_headings":"Examples","what":"Customization examples","title":"flowchart","text":"examples, explore arguments customize following flowchart:","code":"safo |>    as_fc(label = \"Patients assessed for eligibility\") |>   fc_filter(!is.na(group), label = \"Randomized\", show_exc = TRUE) |>    fc_split(group) |>    fc_draw()"},{"path":"https://bruigtp.github.io/flowchart/articles/flowchart.html","id":"add-a-title-to-the-flowchart","dir":"Articles","previous_headings":"Examples > Customization examples","what":"Add a title to the flowchart","title":"flowchart","text":"can add title flowchart using argument title= fc_draw() function:","code":"safo |>    as_fc(label = \"Patients assessed for eligibility\") |>   fc_filter(!is.na(group), label = \"Randomized\", show_exc = TRUE) |>    fc_split(group) |>    fc_draw(title = \"SAFO flowchart\")"},{"path":"https://bruigtp.github.io/flowchart/articles/flowchart.html","id":"add-a-title-to-the-split","dir":"Articles","previous_headings":"Examples > Customization examples","what":"Add a title to the split","title":"flowchart","text":"can also add title split flowchart, using argument title fc_split() function:","code":"safo |>    as_fc(label = \"Patients assessed for eligibility\") |>   fc_filter(!is.na(group), label = \"Randomized\", show_exc = TRUE, perc_total = TRUE) |>    fc_split(group, perc_total = TRUE, title = \"Treatment\", bg_fill_title = \"skyblue\") |>    fc_draw()"},{"path":"https://bruigtp.github.io/flowchart/articles/flowchart.html","id":"percentage-with-respect-to-the-total-rows","dir":"Articles","previous_headings":"Examples > Customization examples","what":"Percentage with respect to the total rows","title":"flowchart","text":"can change calculation percentages flowchart. default, percentages calculated respect box previous level. argument perc_total= can change , calculate respect initial box total number rows:","code":"safo |>    as_fc(label = \"Patients assessed for eligibility\") |>   fc_filter(!is.na(group), label = \"Randomized\", show_exc = TRUE, perc_total = TRUE) |>    fc_split(group, perc_total = TRUE) |>    fc_draw()"},{"path":"https://bruigtp.github.io/flowchart/articles/flowchart.html","id":"offset","dir":"Articles","previous_headings":"Examples > Customization examples","what":"Offset","title":"flowchart","text":"can add/remove space distance boxes split using argument offset:   can also add/remove space distance excluded box filter using argument offset_exc:","code":"safo |>    as_fc(label = \"Patients assessed for eligibility\") |>   fc_filter(!is.na(group), label = \"Randomized\", show_exc = TRUE, perc_total = TRUE) |>    fc_split(group, offset = 0.1) |>    fc_draw() safo |>    as_fc(label = \"Patients assessed for eligibility\") |>   fc_filter(!is.na(group), label = \"Randomized\", show_exc = TRUE, perc_total = TRUE) |>    fc_split(group, offset = -0.1) |>    fc_draw() safo |>    as_fc(label = \"Patients assessed for eligibility\") |>   fc_filter(!is.na(group), label = \"Randomized\", show_exc = TRUE, offset_exc = 0.1) |>    fc_split(group) |>    fc_draw()"},{"path":"https://bruigtp.github.io/flowchart/articles/flowchart.html","id":"change-box-corner-style","dir":"Articles","previous_headings":"Examples > Customization examples","what":"Change Box Corner Style","title":"flowchart","text":"can change corner style flowchart boxes using box_corners argument fc_draw:","code":"safo |>    as_fc(label = \"Patients assessed for eligibility\") |>   fc_filter(!is.na(group), label = \"Randomized\", show_exc = TRUE) |>    fc_split(group) |>    fc_draw(box_corners = \"sharp\")"},{"path":"https://bruigtp.github.io/flowchart/articles/flowchart.html","id":"use-expressions","dir":"Articles","previous_headings":"Examples > Customization examples","what":"Use expressions","title":"flowchart","text":"can use expressions label box. Expressions allow use bold italic text without change font box text. example:  Expressions even allow use formulas. example:","code":"safo |>    as_fc(label = expression(paste(\"Patients \", italic(\"assessed\"), \" for \", bold(\"eligibility\")))) |>   fc_draw() safo |>    as_fc(label = expression(paste(y, \" = \", alpha, \" + \", beta, x))) |>   fc_draw()"},{"path":"https://bruigtp.github.io/flowchart/articles/flowchart.html","id":"split-in-one-group","dir":"Articles","previous_headings":"Examples > Customization examples","what":"Split in one group","title":"flowchart","text":"can perform additional split one groups using argument sel_group=:  , also perform filter group:  want select group flowchart two groups supply vector sel_group= desired groups selected:","code":"safo |>    as_fc(label = \"Patients assessed for eligibility\") |>   fc_filter(!is.na(group), label = \"Randomized\", show_exc = TRUE) |>    fc_split(group) |>    fc_split(N = c(50, 60), sel_group = \"cloxacillin alone\") |>    fc_draw() safo |>    as_fc(label = \"Patients assessed for eligibility\") |>   fc_filter(!is.na(group), label = \"Randomized\", show_exc = TRUE) |>    fc_split(group) |>    fc_split(N = c(50, 60), sel_group = \"cloxacillin alone\") |>    fc_filter(N = 50, sel_group = \"cloxacillin plus fosfomycin\") |>    fc_draw() safo |>    as_fc(label = \"Patients assessed for eligibility\") |>   fc_filter(!is.na(group), label = \"Randomized\", show_exc = TRUE) |>    fc_split(group) |>    fc_split(N = c(50, 55, 10, 100)) |>    fc_filter(N = 60, sel_group = c(\"cloxacillin alone\", \"group 2\")) |>    fc_draw()"},{"path":"https://bruigtp.github.io/flowchart/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Pau Satorra. Author, maintainer. João Carmezim. Author. Natàlia Pallarès. Author. Cristian Tebé. Author. Kenneth Taylor. Contributor.","code":""},{"path":"https://bruigtp.github.io/flowchart/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Satorra P, Carmezim J, Pallarès N, Tebé C (2025). flowchart: Tidy Flowchart Generator. R package version 0.7.0.9001, https://bruigtp.github.io/flowchart/.","code":"@Manual{,   title = {flowchart: Tidy Flowchart Generator},   author = {Pau Satorra and João Carmezim and Natàlia Pallarès and Cristian Tebé},   year = {2025},   note = {R package version 0.7.0.9001},   url = {https://bruigtp.github.io/flowchart/}, }"},{"path":"https://bruigtp.github.io/flowchart/index.html","id":"flowchart-","dir":"","previous_headings":"","what":"Tidy Flowchart Generator","title":"Tidy Flowchart Generator","text":"          ","code":""},{"path":"https://bruigtp.github.io/flowchart/index.html","id":"tidy-flowchart-generator","dir":"","previous_headings":"","what":"Tidy Flowchart Generator","title":"Tidy Flowchart Generator","text":"flowchart R package drawing participant flow diagrams directly dataframe using tidyverse. provides set functions can combined pipe operator create kinds flowcharts dataframe easy way. can see package action : https://bruigtp.github.io/flowchart/","code":""},{"path":"https://bruigtp.github.io/flowchart/index.html","id":"how-to-install-it","dir":"","previous_headings":"","what":"How to install it?","title":"Tidy Flowchart Generator","text":"package available CRAN: https://cran.r-project.org/web/packages/flowchart/index.html. can download development version github repository:","code":"install.packages(\"flowchart\") # install.packages(\"remotes\") remotes::install_github('bruigtp/flowchart')"},{"path":"https://bruigtp.github.io/flowchart/index.html","id":"how-it-works","dir":"","previous_headings":"","what":"How it works?","title":"Tidy Flowchart Generator","text":"following GIF provides example tidy process drawing flowchart clinical trial:","code":""},{"path":"https://bruigtp.github.io/flowchart/index.html","id":"about","dir":"","previous_headings":"","what":"About","title":"Tidy Flowchart Generator","text":"Package: flowchart Type: Package Version: 0.7.0 (CRAN) Authors: Pau Satorra, João Carmezim, Natàlia Pallarès, Cristian Tebé. Maintainer: Pau Satorra License: GPL (>= 3) Encoding: UTF-8 Depends: R (>= 4.1.0)","code":""},{"path":"https://bruigtp.github.io/flowchart/reference/as_fc.html","id":null,"dir":"Reference","previous_headings":"","what":"as_fc — as_fc","title":"as_fc — as_fc","text":"function allows initialize flow chart given database. create fc object showing number rows database. database available, user can instead directly enter number rows study.","code":""},{"path":"https://bruigtp.github.io/flowchart/reference/as_fc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"as_fc — as_fc","text":"","code":"as_fc(   .data = NULL,   N = NULL,   label = \"Initial dataframe\",   text_pattern = \"{label}\\n{N}\",   just = \"center\",   text_color = \"black\",   text_fs = 8,   text_fface = 1,   text_ffamily = NA,   text_padding = 1,   bg_fill = \"white\",   border_color = \"black\",   hide = FALSE )"},{"path":"https://bruigtp.github.io/flowchart/reference/as_fc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"as_fc — as_fc","text":".data Data frame initialised flowchart. N Number rows study case `.data` NULL. label Character expression text shown box. text_pattern Structure text box. recognizes label, n, N perc within brackets. default \"{label}\\n{N}\". label expression, label always placed beginning pattern, followed line break structure specified text_pattern placed. just Justification text: left, center right. Default center. text_color Color text. black default. See `col` parameter gpar. text_fs Font size text. 8 default. See `fontsize` parameter gpar. text_fface Font face text. 1 default. See `fontface` parameter gpar. text_ffamily Changes font family text. Default NA. See `fontfamily` parameter gpar. text_padding Changes text padding inside box. Default 1. number greater 0. bg_fill Box background color. white default. See `fill` parameter gpar. border_color Box border color. black default. See `col` parameter gpar. hide Logical value hide initial box . Default FALSE. hide = TRUE can combined fc_split().","code":""},{"path":"https://bruigtp.github.io/flowchart/reference/as_fc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"as_fc — as_fc","text":"List dataset initialized flowchart parameters.","code":""},{"path":"https://bruigtp.github.io/flowchart/reference/as_fc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"as_fc — as_fc","text":"","code":"safo |> as_fc(label = \"Patients assessed for eligibility\") |> fc_draw()"},{"path":"https://bruigtp.github.io/flowchart/reference/fc_draw.html","id":null,"dir":"Reference","previous_headings":"","what":"fc_draw — fc_draw","title":"fc_draw — fc_draw","text":"function allows draw flowchart fc object.","code":""},{"path":"https://bruigtp.github.io/flowchart/reference/fc_draw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"fc_draw — fc_draw","text":"","code":"fc_draw(   object,   big.mark = \"\",   box_corners = \"round\",   arrow_angle = 30,   arrow_length = grid::unit(0.1, \"inches\"),   arrow_ends = \"last\",   arrow_type = \"closed\",   title = NULL,   title_x = 0.5,   title_y = 0.9,   title_color = \"black\",   title_fs = 15,   title_fface = 2,   title_ffamily = NULL )"},{"path":"https://bruigtp.github.io/flowchart/reference/fc_draw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"fc_draw — fc_draw","text":"object fc object want draw. big.mark character. Used specify thousands separator patient count values. Defaults separator (`\"\"`); empty used mark every 3 digits (ex: `big.mark = \",\"` results `1,000` instead `1000`). box_corners Indicator whether draw boxes round (`\"round\"`) vs non-round (`\"sharp\"`) corners. Default `\"round\"`. arrow_angle angle arrow head degrees, `arrow`. arrow_length unit specifying length arrow head (tip base), `arrow`. arrow_ends One \"last\", \"first\", \"\", indicating ends line draw arrow heads, `arrow`. arrow_type One \"open\" \"closed\" indicating whether arrow head closed triangle, `arrow`. title title flowchart. Default NULL (title). title_x x coordinate title. Default 0.5. title_y y coordinate title. Default 0.9. title_color Color title. black default. See `col` parameter gpar. title_fs Font size title. 15 default. See `fontsize` parameter gpar. title_fface Font face title. 2 default. See `fontface` parameter gpar. title_ffamily Changes font family title. Default NA. See `fontfamily` parameter gpar.","code":""},{"path":"https://bruigtp.github.io/flowchart/reference/fc_draw.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"fc_draw — fc_draw","text":"Invisibly returns object given function, given arguments draw flowchart stored attributes.","code":""},{"path":"https://bruigtp.github.io/flowchart/reference/fc_draw.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"fc_draw — fc_draw","text":"","code":"safo |>   as_fc(label = \"Patients assessed for eligibility\") |>   fc_filter(!is.na(group), label = \"Randomized\", show_exc = TRUE) |>   fc_split(group) |>   fc_filter(itt == \"Yes\", label = \"Included in ITT\") |>   fc_filter(pp == \"Yes\", label = \"Included in PP\") |>   fc_draw()"},{"path":"https://bruigtp.github.io/flowchart/reference/fc_export.html","id":null,"dir":"Reference","previous_headings":"","what":"fc_export — fc_export","title":"fc_export — fc_export","text":"function allows export drawn flowchart popular graphic formats, including bitmap formats (png, jpeg, tiff, bmp) vector formats (svg, pdf). bitmap formats, uses `ragg` package devices available higher performance higher quality output standard raster devices provide `grDevices`.","code":""},{"path":"https://bruigtp.github.io/flowchart/reference/fc_export.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"fc_export — fc_export","text":"","code":"fc_export(   object,   filename,   path = NULL,   format = NULL,   width = NA,   height = NA,   units = NULL,   res = 100 )"},{"path":"https://bruigtp.github.io/flowchart/reference/fc_export.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"fc_export — fc_export","text":"object fc object want export. filename File name create disk. path Path directory save plot : path filename combined create fully qualified file name. Defaults working directory. format Name graphic device. One 'png', 'jpeg', 'tiff', 'bmp', 'svg', 'pdf'. `NULL` (default), format guessed based filename extension. width, height Plot size units expressed `units` argument. Default 600px bitmap formats 6 inches vector formats. units One following units width height arguments expressed: \"\", \"cm\", \"mm\" vector formats \"\", \"cm\", \"mm\" \"px\" bitmap formats. left `NULL` (default), function automatically use \"px\" bitmap formats \"\" vector formats. res nominal resolution ppi recorded bitmap file, positive integer. Also used units default, convert points pixels. Default 100 exporting bitmap format. argument unused exporting vector format.","code":""},{"path":"https://bruigtp.github.io/flowchart/reference/fc_export.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"fc_export — fc_export","text":"Invisibly returns object given function.","code":""},{"path":"https://bruigtp.github.io/flowchart/reference/fc_export.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"fc_export — fc_export","text":"- **Vector Formats ('svg', 'pdf'):** formats ideal graphics need scaled without loss quality. default units width height inches. user specifies `units` inches (\"mm\" \"cm\"), function convert dimensions inches using standard conversion formulas. - **Bitmap Formats ('png', 'jpeg', 'tiff', 'bmp'):** formats (exception 'bmp'), function uses `ragg` package devices available, providing higher performance higher quality output. default units width height pixels. - **Suggested Dependencies:** superior performance quality bitmap outputs, recommended install `ragg` package. exporting 'pdf' format enhanced features, Cairo graphics library used available.","code":""},{"path":"https://bruigtp.github.io/flowchart/reference/fc_export.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"fc_export — fc_export","text":"","code":"if (FALSE) { # \\dontrun{ safo |>  as_fc(label = \"Patients assessed for eligibility\") |>  fc_filter(!is.na(group), label = \"Randomized\", show_exc = TRUE) |>  fc_draw() |>  fc_export(\"flowchart.png\")  #Specifying size and resolution safo |>  as_fc(label = \"Patients assessed for eligibility\") |>  fc_filter(!is.na(group), label = \"Randomized\", show_exc = TRUE) |>  fc_draw() |>  fc_export(\"flowchart.png\", width = 3000, height = 4000, res = 700)  #Exporting to an SVG file safo |>  as_fc(label = \"Patients assessed for eligibility\") |>  fc_filter(!is.na(group), label = \"Randomized\", show_exc = TRUE) |>  fc_draw() |>  fc_export(\"flowchart.svg\")  #Exporting to a PDF file safo |>  as_fc(label = \"Patients assessed for eligibility\") |>  fc_filter(!is.na(group), label = \"Randomized\", show_exc = TRUE) |>  fc_draw() |>  fc_export(\"flowchart.pdf\") } # }"},{"path":"https://bruigtp.github.io/flowchart/reference/fc_filter.html","id":null,"dir":"Reference","previous_headings":"","what":"fc_filter — fc_filter","title":"fc_filter — fc_filter","text":"function allows filter flowchart function expression returns logic value defined terms variables database. generate one box per group showing number rows group matches condition, retain rows data base.","code":""},{"path":"https://bruigtp.github.io/flowchart/reference/fc_filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"fc_filter — fc_filter","text":"","code":"fc_filter(   object,   filter = NULL,   N = NULL,   label = NULL,   text_pattern = \"{label}\\n {n} ({perc}%)\",   perc_total = FALSE,   show_exc = FALSE,   direction_exc = \"right\",   label_exc = \"Excluded\",   text_pattern_exc = \"{label}\\n {n} ({perc}%)\",   sel_group = NULL,   round_digits = 2,   just = \"center\",   text_color = \"black\",   text_fs = 8,   text_fface = 1,   text_ffamily = NA,   text_padding = 1,   bg_fill = \"white\",   border_color = \"black\",   just_exc = \"center\",   text_color_exc = \"black\",   text_fs_exc = 6,   text_fface_exc = 1,   text_ffamily_exc = NA,   text_padding_exc = 1,   bg_fill_exc = \"white\",   border_color_exc = \"black\",   offset_exc = NULL )"},{"path":"https://bruigtp.github.io/flowchart/reference/fc_filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"fc_filter — fc_filter","text":"object fc object want filter. filter Expression returns logical value defined terms variables data frame. data base filtered expression, create box showing number rows satisfying condition. N Number rows filter case `filter` NULL. label Character expression title box. default evaluated condition. text_pattern Structure text boxes. recognizes label, n, N perc within brackets. default \"{label}\\n {n} ({perc}%)\". label expression, label always placed beginning pattern, followed line break structure specified text_pattern placed. perc_total logical. percentages calculated using total number rows beginning flowchart? Default FALSE, meaning calculated using number parent leaf. show_exc Logical value. TRUE box showing number excluded rows added flow chart. direction_exc One \"left\" \"right\" indicating exclusion box goes left direction right direction. default \"right\". label_exc Character expression title added box showing excluded patients. default show \"Excluded\". text_pattern_exc Structure text excluded boxes. recognizes label, n, N perc within brackets. default \"{label}\\n {n} ({perc}%)\". label_exc expression, label always placed beginning pattern, followed line break structure specified text_pattern_exc placed. sel_group Select group perform filter. default NULL. Can used flowchart previously split. flowchart one group, can either given full name stored `$fc` component (separated '\\'), can given vector names group selected. round_digits Number digits round percentages. 2 default. just Justification text: left, center right. Default center. text_color Color text. black default. See `col` parameter gpar. text_fs Font size text. 8 default. See `fontsize` parameter gpar. text_fface Font face text. 1 default. See `fontface` parameter gpar. text_ffamily Changes font family text. Default NA. See `fontfamily` parameter gpar. text_padding Changes text padding inside box. Default 1. number greater 0. bg_fill Box background color. white default. See `fill` parameter gpar. border_color Box border color. black default. See `col` parameter gpar. just_exc Justification text exclude box: left, center right. Default center. text_color_exc Color text exclude box. black default. See `text_color`. text_fs_exc Font size text exclude box. 6 default. See `text_fs`. text_fface_exc Font face text exclude box. 1 default. See `fontface` parameter gpar. See `text_fface`. text_ffamily_exc Changes font family text exclude box. Default NA. See `fontfamily` parameter gpar. See `text_ffamily`. text_padding_exc Changes text padding inside exclude box. Default 1. number greater 0. bg_fill_exc Exclude box background color. white default. See `bg_fill`. border_color_exc Box background color exclude box. black default. See `border_color`. offset_exc Amount space add distance box excluded box (x coordinate). positive, distance larger. negative, smaller. number least 0 1 (plot limits) resulting x coordinate exceed plot limits. default NULL (offset).","code":""},{"path":"https://bruigtp.github.io/flowchart/reference/fc_filter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"fc_filter — fc_filter","text":"List filtered dataset flowchart parameters resulting filtered box.","code":""},{"path":"https://bruigtp.github.io/flowchart/reference/fc_filter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"fc_filter — fc_filter","text":"","code":"safo |>   as_fc(label = \"Patients assessed for eligibility\") |>   fc_filter(!is.na(group), label = \"Randomized\", show_exc = TRUE) |>   fc_draw()"},{"path":"https://bruigtp.github.io/flowchart/reference/fc_merge.html","id":null,"dir":"Reference","previous_headings":"","what":"fc_merge — fc_merge","title":"fc_merge — fc_merge","text":"function allows combine horizontally two different flowcharts.","code":""},{"path":"https://bruigtp.github.io/flowchart/reference/fc_merge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"fc_merge — fc_merge","text":"","code":"fc_merge(fcs)"},{"path":"https://bruigtp.github.io/flowchart/reference/fc_merge.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"fc_merge — fc_merge","text":"fcs list flowcharts want merge","code":""},{"path":"https://bruigtp.github.io/flowchart/reference/fc_merge.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"fc_merge — fc_merge","text":"List containing list datasets belonging flowchart another list flowcharts parameters merge.","code":""},{"path":"https://bruigtp.github.io/flowchart/reference/fc_merge.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"fc_merge — fc_merge","text":"","code":"# Create first flowchart for ITT fc1 <- safo |>   as_fc(label = \"Patients assessed for eligibility\") |>   fc_filter(itt == \"Yes\", label = \"Intention to treat (ITT)\")   # Create second flowchart for PP fc2 <- safo |>   as_fc(label = \"Patients assessed for eligibility\") |>  fc_filter(pp == \"Yes\", label = \"Per protocol (PP)\")  list(fc1, fc2) |>   fc_merge() |>   fc_draw()"},{"path":"https://bruigtp.github.io/flowchart/reference/fc_modify.html","id":null,"dir":"Reference","previous_headings":"","what":"fc_modify — fc_modify","title":"fc_modify — fc_modify","text":"function allows modify `.$fc` tibble included fc object contains parameters flowchart.","code":""},{"path":"https://bruigtp.github.io/flowchart/reference/fc_modify.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"fc_modify — fc_modify","text":"","code":"fc_modify(object, fun, ...)"},{"path":"https://bruigtp.github.io/flowchart/reference/fc_modify.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"fc_modify — fc_modify","text":"object flowchart created fc object. fun function formula applied `.$fc`. _function_, used . _formula_, e.g. `fun = ~.x |> mutate(x = x + 0.2)`, converted function. ... Additional arguments passed mapped function.","code":""},{"path":"https://bruigtp.github.io/flowchart/reference/fc_modify.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"fc_modify — fc_modify","text":"List dataset modified flowchart parameters.","code":""},{"path":"https://bruigtp.github.io/flowchart/reference/fc_modify.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"fc_modify — fc_modify","text":"","code":"#Example: let's modify the excluded box text_exc <- paste0(   sum(safo$inclusion_crit == \"Yes\"),   \" not met the inclusion criteria\\n\",   sum(safo$exclusion_crit == \"Yes\"),   \" met the exclusion criteria\" )  safo |>   as_fc(label = \"Patients assessed for eligibility\") |>   fc_filter(!is.na(group), label = \"Randomized\", show_exc = TRUE) |>   fc_modify(     ~ . |>       dplyr::mutate(         text = ifelse(id == 3, text_exc, text),         x = ifelse(id == 3, 0.75, x)       )   ) |>   fc_draw()"},{"path":"https://bruigtp.github.io/flowchart/reference/fc_split.html","id":null,"dir":"Reference","previous_headings":"","what":"fc_split — fc_split","title":"fc_split — fc_split","text":"function allows split flowchart function categories column database. generate many boxes categories column showing one frequency category. additionally group database per column.","code":""},{"path":"https://bruigtp.github.io/flowchart/reference/fc_split.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"fc_split — fc_split","text":"","code":"fc_split(   object,   var = NULL,   N = NULL,   label = NULL,   text_pattern = \"{label}\\n {n} ({perc}%)\",   perc_total = FALSE,   sel_group = NULL,   na.rm = FALSE,   show_zero = FALSE,   round_digits = 2,   just = \"center\",   text_color = \"black\",   text_fs = 8,   text_fface = 1,   text_ffamily = NA,   text_padding = 1,   bg_fill = \"white\",   border_color = \"black\",   title = NULL,   text_color_title = \"black\",   text_fs_title = 10,   text_fface_title = 1,   text_ffamily_title = NA,   text_padding_title = 0.6,   bg_fill_title = \"white\",   border_color_title = \"black\",   offset = NULL )"},{"path":"https://bruigtp.github.io/flowchart/reference/fc_split.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"fc_split — fc_split","text":"object fc object want split. var variable column database splitted. N Number rows split case `var` NULL. label Vector characters vector expressions label category order. many elements categories column. default, put labels categories. text_pattern Structure text boxes. recognizes label, n, N perc within brackets. default \"{label}\\n {n} ({perc}%)\". label expression, label always placed beginning pattern, followed line break structure specified text_pattern placed. perc_total logical. percentages calculated using total number rows beginning flowchart? Default FALSE, meaning calculated using number parent leaf. sel_group Select group perform filter. default NULL. Can used flowchart previously split. flowchart one group, can either given full name stored `$fc` component (separated '\\'), can given vector names group selected. na.rm logical. missing values grouping variable removed? Default FALSE. show_zero logical. levels grouping variable data shown? Default FALSE. round_digits Number digits round percentages. 2 default. just Justification text: left, center right. Default center. text_color Color text. black default. text_fs Font size text. 8 default. text_fface Font face text. 1 default. See `fontface` parameter gpar. text_ffamily Changes font family text. Default NA. See `fontfamily` parameter gpar. text_padding Changes text padding inside box. Default 1. number greater 0. bg_fill Box background color. white default. border_color Box border color. black default. title Add title box split. Default NULL. can used two resulting boxes split. text_color_title Color title text. black default. text_fs_title Font size title text. 8 default. text_fface_title Font face title text. 1 default. See `fontface` parameter gpar. text_ffamily_title Changes font family title text. Default NA. See `fontfamily` parameter gpar. text_padding_title Changes title text padding inside box. Default 1. number greater 0. bg_fill_title Title box background color. white default. border_color_title Title box border color. black default. offset Amount space add distance boxes (x coordinate). positive, distance larger. negative, smaller. number least 0 1 (plot limits) resulting x coordinate exceed plot limits. default NULL (offset).","code":""},{"path":"https://bruigtp.github.io/flowchart/reference/fc_split.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"fc_split — fc_split","text":"List dataset grouped splitting variable flowchart parameters resulting split.","code":""},{"path":"https://bruigtp.github.io/flowchart/reference/fc_split.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"fc_split — fc_split","text":"","code":"safo |>   dplyr::filter(!is.na(group)) |>   as_fc(label = \"Randomized patients\") |>   fc_split(group) |>   fc_draw()"},{"path":"https://bruigtp.github.io/flowchart/reference/fc_stack.html","id":null,"dir":"Reference","previous_headings":"","what":"fc_stack — fc_stack","title":"fc_stack — fc_stack","text":"function allows combine vertically two different flowcharts.","code":""},{"path":"https://bruigtp.github.io/flowchart/reference/fc_stack.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"fc_stack — fc_stack","text":"","code":"fc_stack(fcs, unite = FALSE)"},{"path":"https://bruigtp.github.io/flowchart/reference/fc_stack.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"fc_stack — fc_stack","text":"fcs list flowcharts want merge unite logical value boxes united . Default FALSE.","code":""},{"path":"https://bruigtp.github.io/flowchart/reference/fc_stack.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"fc_stack — fc_stack","text":"List containing list datasets belonging flowchart flowchart parameters combining flowcharts.","code":""},{"path":"https://bruigtp.github.io/flowchart/reference/fc_stack.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"fc_stack — fc_stack","text":"","code":"# Create first flowchart for ITT fc1 <- safo |>   as_fc(label = \"Patients assessed for eligibility\") |>   fc_filter(itt == \"Yes\", label = \"Intention to treat (ITT)\")   # Create second flowchart for PP fc2 <- safo |>   as_fc(label = \"Patients assessed for eligibility\") |>  fc_filter(pp == \"Yes\", label = \"Per protocol (PP)\")  list(fc1, fc2) |>   fc_stack() |>   fc_draw()"},{"path":"https://bruigtp.github.io/flowchart/reference/fc_view.html","id":null,"dir":"Reference","previous_headings":"","what":"fc_view — fc_view","title":"fc_view — fc_view","text":"function allows return either data stored `$data` flowchart information stored `$fc`.","code":""},{"path":"https://bruigtp.github.io/flowchart/reference/fc_view.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"fc_view — fc_view","text":"","code":"fc_view(object, what)"},{"path":"https://bruigtp.github.io/flowchart/reference/fc_view.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"fc_view — fc_view","text":"object fc object want access. Choose \"data\" return data associated flowchart stored `$data` \"fc\" return flowchart information stored `$fc`.","code":""},{"path":"https://bruigtp.github.io/flowchart/reference/fc_view.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"fc_view — fc_view","text":"Returns tibble. Either `$data` `$fc`.","code":""},{"path":"https://bruigtp.github.io/flowchart/reference/fc_view.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"fc_view — fc_view","text":"","code":"#Return the data associated to the flowchart safo |>  as_fc(label = \"Patients assessed for eligibility\") |>  fc_filter(!is.na(group), label = \"Randomized\", show_exc = TRUE) |>  fc_view(\"data\") #> # A tibble: 215 × 21 #>       id inclusion_crit exclusion_crit chronic_heart_failure expected_death_24h #>    <int> <fct>          <fct>          <fct>                 <fct>              #>  1     3 No             No             No                    No                 #>  2     5 No             No             No                    No                 #>  3     9 No             No             No                    No                 #>  4    12 No             No             No                    No                 #>  5    14 No             No             No                    No                 #>  6    27 No             No             No                    No                 #>  7    29 No             No             No                    No                 #>  8    32 No             No             No                    No                 #>  9    50 No             No             No                    No                 #> 10    51 No             No             No                    No                 #> # ℹ 205 more rows #> # ℹ 16 more variables: polymicrobial_bacteremia <fct>, #> #   conditions_affect_adhrence <fct>, susp_prosthetic_valve_endocard <fct>, #> #   severe_liver_cirrhosis <fct>, acute_sars_cov2 <fct>, #> #   blactam_fosfomycin_hypersens <fct>, other_clinical_trial <fct>, #> #   pregnancy_or_breastfeeding <fct>, previous_participation <fct>, #> #   myasthenia_gravis <fct>, decline_part <fct>, group <fct>, itt <fct>, …  #Return the flowchart information safo |>  as_fc(label = \"Patients assessed for eligibility\") |>  fc_filter(!is.na(group), label = \"Randomized\", show_exc = TRUE) |>  fc_view(\"fc\") #> # A tibble: 3 × 17 #>      id     x     y     n     N perc  text  type  group just  text_color text_fs #>   <int> <dbl> <dbl> <int> <int> <chr> <chr> <chr> <lgl> <chr> <chr>        <dbl> #> 1     1  0.5  0.667   925   925 100   \"Pat… init  NA    cent… black            8 #> 2     2  0.5  0.333   215   925 23.24 \"Ran… filt… NA    cent… black            8 #> 3     3  0.65 0.5     710   925 76.76 \"Exc… excl… NA    cent… black            6 #> # ℹ 5 more variables: text_fface <dbl>, text_ffamily <lgl>, text_padding <dbl>, #> #   bg_fill <chr>, border_color <chr>"},{"path":"https://bruigtp.github.io/flowchart/reference/is_class.html","id":null,"dir":"Reference","previous_headings":"","what":"is_class — is_class","title":"is_class — is_class","text":"Function check object given class.","code":""},{"path":"https://bruigtp.github.io/flowchart/reference/is_class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"is_class — is_class","text":"","code":"is_class(x, class)"},{"path":"https://bruigtp.github.io/flowchart/reference/is_class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"is_class — is_class","text":"x element check class desired class check","code":""},{"path":"https://bruigtp.github.io/flowchart/reference/quiet_prettyNum.html","id":null,"dir":"Reference","previous_headings":"","what":"quiet_prettyNum — quiet_prettyNum","title":"quiet_prettyNum — quiet_prettyNum","text":"Wrapper `prettyNum()` suppresses original warning message user `big.mark` equal character defined R environment `OutDec` option.","code":""},{"path":"https://bruigtp.github.io/flowchart/reference/quiet_prettyNum.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"quiet_prettyNum — quiet_prettyNum","text":"","code":"quiet_prettyNum(x, big.mark)"},{"path":"https://bruigtp.github.io/flowchart/reference/quiet_prettyNum.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"quiet_prettyNum — quiet_prettyNum","text":"x atomic numerical character object, possibly complex, typically vector real numbers. big.mark character. Used specify thousands separator patient count values.","code":""},{"path":"https://bruigtp.github.io/flowchart/reference/replace_num_in_expr.html","id":null,"dir":"Reference","previous_headings":"","what":"replace_num_in_expr — replace_num_in_expr","title":"replace_num_in_expr — replace_num_in_expr","text":"Helper function `update_numbers()`.","code":""},{"path":"https://bruigtp.github.io/flowchart/reference/replace_num_in_expr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"replace_num_in_expr — replace_num_in_expr","text":"","code":"replace_num_in_expr(expr, row, big.mark)"},{"path":"https://bruigtp.github.io/flowchart/reference/replace_num_in_expr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"replace_num_in_expr — replace_num_in_expr","text":"expr expression `fc$text`. row row `fc` object containing `n`, `N`, `perc` values. big.mark character. Used specify thousands separator patient count values.","code":""},{"path":"https://bruigtp.github.io/flowchart/reference/safo.html","id":null,"dir":"Reference","previous_headings":"","what":"Random generated dataset from the SAFO study — safo","title":"Random generated dataset from the SAFO study — safo","text":"dataset random generated dataset reproduce numbers needed generate flowchart SAFO study. SAFO open-label, multicenter, phase III–IV superiority randomized clinical trial assess whether cloxacillin plus fosfomycin administered initial 7-days therapy achieves better treatment success cloxacillin alone hospitalized patients MSSA bacteremia.","code":""},{"path":"https://bruigtp.github.io/flowchart/reference/safo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Random generated dataset from the SAFO study — safo","text":"","code":"data(safo)"},{"path":"https://bruigtp.github.io/flowchart/reference/safo.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Random generated dataset from the SAFO study — safo","text":"data frame 925 rows 21 columns id: Identifier patient. information match real data. inclusion_crit: patient met inclusion criteria? exclusion_crit: patient met exclusion criteria? chronic_heart_failure: Exc1: Chronic heart failure? expected_death_24h: Exc2: Clinical status expected death <24h? polymicrobial_bacteremia: Exc3: Polymicrobial bacteremia? conditions_affect_adhrence: Exc4: Conditions expected affect adhrence protocol? susp_prosthetic_valve_endocard: Exc5: Suspicion prosthetic valve endocarditis? severe_liver_cirrhosis: Exc6: Severe liver cirrhosis? acute_sars_cov2: Exc7: Acute SARS-CoV-2 infection? blactam_fosfomycin_hypersens: Exc8: Beta-lactam fosfomycin hypersensitivity? other_clinical_trial: Exc9: Participation another clinical trial? pregnancy_or_breastfeeding: Exc10: Pregnancy breastfeeding? previous_participation: Exc11: Previous participation SAFO trial? myasthenia_gravis: Exc12: Myasthenia gravis? decline_part: patient declined participate? group: Randomized treatment received: cloxacilin alone / cloxacilin plus fosfomycin itt: patient belongs intention treat (ITT) group? reason_itt: Reason exclusion ITT group. pp: patient belongs per protocol (PP) group? reason_pp: Reason exclusion PP group.","code":""},{"path":"https://bruigtp.github.io/flowchart/reference/safo.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Random generated dataset from the SAFO study — safo","text":"Grillo, S., Pujol, M., Miró, J.M. et al. Cloxacillin plus fosfomycin versus cloxacillin alone methicillin-susceptible Staphylococcus aureus bacteremia: randomized trial. Nat Med 29, 2518–2525 (2023). https://doi.org/10.1038/s41591-023-02569-0","code":""},{"path":"https://bruigtp.github.io/flowchart/reference/update_numbers.html","id":null,"dir":"Reference","previous_headings":"","what":"update_numbers — update_numbers","title":"update_numbers — update_numbers","text":"Updates values `n` `N` referenced `text` column user specifies `big.mark` argument `fc_draw`.","code":""},{"path":"https://bruigtp.github.io/flowchart/reference/update_numbers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"update_numbers — update_numbers","text":"","code":"update_numbers(object, big.mark = \"\")"},{"path":"https://bruigtp.github.io/flowchart/reference/update_numbers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"update_numbers — update_numbers","text":"object fc object want draw. big.mark character. Used specify thousands separator patient count values. Defaults separator (`\"\"`); empty used mark every 3 digits (ex: `big.mark = \",\"` results `1,000` instead `1000`).","code":""},{"path":"https://bruigtp.github.io/flowchart/reference/update_x.html","id":null,"dir":"Reference","previous_headings":"","what":"update_x — update_x","title":"update_x — update_x","text":"Function update horizontal position previuosly created flow charts, merge two flowcharts used fc_merge().","code":""},{"path":"https://bruigtp.github.io/flowchart/reference/update_x.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"update_x — update_x","text":"","code":"update_x(x, i, n)"},{"path":"https://bruigtp.github.io/flowchart/reference/update_x.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"update_x — update_x","text":"x old horizontal position boxes position flowchart within list flowcharts. n number total flowcharts merge","code":""},{"path":"https://bruigtp.github.io/flowchart/reference/update_y.html","id":null,"dir":"Reference","previous_headings":"","what":"update_y — update_y","title":"update_y — update_y","text":"Function update vertical position previuosly created boxes, add new ones fc_split() fc_filter().","code":""},{"path":"https://bruigtp.github.io/flowchart/reference/update_y.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"update_y — update_y","text":"","code":"update_y(y, type, x, group)"},{"path":"https://bruigtp.github.io/flowchart/reference/update_y.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"update_y — update_y","text":"y old height boxes type type box x horizontal position boxes","code":""},{"path":"https://bruigtp.github.io/flowchart/reference/update_y_stack.html","id":null,"dir":"Reference","previous_headings":"","what":"update_y_stack — update_y_stack","title":"update_y_stack — update_y_stack","text":"Function update vertical position previuosly created flowcharts, stack two flowcharts fc_stack().","code":""},{"path":"https://bruigtp.github.io/flowchart/reference/update_y_stack.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"update_y_stack — update_y_stack","text":"","code":"update_y_stack(y, x, type, i, n)"},{"path":"https://bruigtp.github.io/flowchart/reference/update_y_stack.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"update_y_stack — update_y_stack","text":"y old vertical position boxes x old horizontal position boxes type type boxes position flowchart within list flowcharts. n number total flowcharts merge","code":""},{"path":"https://bruigtp.github.io/flowchart/reference/update_y_stack_unite.html","id":null,"dir":"Reference","previous_headings":"","what":"update_y_stack_unite — update_y_stack_unite","title":"update_y_stack_unite — update_y_stack_unite","text":"Function update vertical position previuosly created flowcharts, stack two flowcharts fc_stack(), `unite` TRUE.","code":""},{"path":"https://bruigtp.github.io/flowchart/reference/update_y_stack_unite.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"update_y_stack_unite — update_y_stack_unite","text":"","code":"update_y_stack_unite(y, x, type)"},{"path":"https://bruigtp.github.io/flowchart/reference/update_y_stack_unite.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"update_y_stack_unite — update_y_stack_unite","text":"y old vertical position boxes x old horizontal position boxes type type boxes","code":""},{"path":"https://bruigtp.github.io/flowchart/news/index.html","id":"flowchart-010","dir":"Changelog","previous_headings":"","what":"flowchart 0.1.0","title":"flowchart 0.1.0","text":"CRAN release: 2024-02-06 Initial CRAN submission.","code":""},{"path":"https://bruigtp.github.io/flowchart/news/index.html","id":"flowchart-020","dir":"Changelog","previous_headings":"","what":"flowchart 0.2.0","title":"flowchart 0.2.0","text":"CRAN release: 2024-04-09","code":""},{"path":"https://bruigtp.github.io/flowchart/news/index.html","id":"major-changes-0-2-0","dir":"Changelog","previous_headings":"","what":"Major changes","title":"flowchart 0.2.0","text":"Added new N= argument functions as_fc(), fc_filter() fc_split() enter number rows manually case dataframe available. New fc_export() function export flowchart desired format. Solved bug performing split. Now x-coordinates resulting boxes placed symmetrically around parent box, homogeneously distributed across space.","code":""},{"path":"https://bruigtp.github.io/flowchart/news/index.html","id":"minor-changes-0-2-0","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"flowchart 0.2.0","text":"Added round_digits= argument fc_filter() fc_split() functions, allows change number decimals round percentages. Added show_zero= argument fc_split(), allows control whether groups zero events shown box . Updated description minimum R version (>= 4.1.0).","code":""},{"path":"https://bruigtp.github.io/flowchart/news/index.html","id":"flowchart-030","dir":"Changelog","previous_headings":"","what":"flowchart 0.3.0","title":"flowchart 0.3.0","text":"CRAN release: 2024-05-10","code":""},{"path":"https://bruigtp.github.io/flowchart/news/index.html","id":"major-changes-0-3-0","dir":"Changelog","previous_headings":"","what":"Major changes","title":"flowchart 0.3.0","text":"Bug fc_split() function splitting factor levels arranged alphabetical order. Bug fc_split() function performing multiple splits showing percentages. percentages calculated based total number rows, total number rows groups defined previous splits.","code":""},{"path":"https://bruigtp.github.io/flowchart/news/index.html","id":"flowchart-040","dir":"Changelog","previous_headings":"","what":"flowchart 0.4.0","title":"flowchart 0.4.0","text":"CRAN release: 2024-05-29","code":""},{"path":"https://bruigtp.github.io/flowchart/news/index.html","id":"major-changes-0-4-0","dir":"Changelog","previous_headings":"","what":"Major changes","title":"flowchart 0.4.0","text":"Removed clinic_patient clinic_visit built-datasets","code":""},{"path":"https://bruigtp.github.io/flowchart/news/index.html","id":"minor-changes-0-4-0","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"flowchart 0.4.0","text":"Changed safo built-dataset Now unite=FALSE default fc_stack() function Added bmp format fc_export() function","code":""},{"path":"https://bruigtp.github.io/flowchart/news/index.html","id":"flowchart-050","dir":"Changelog","previous_headings":"","what":"flowchart 0.5.0","title":"flowchart 0.5.0","text":"CRAN release: 2024-09-26","code":""},{"path":"https://bruigtp.github.io/flowchart/news/index.html","id":"major-changes-0-5-0","dir":"Changelog","previous_headings":"","what":"Major changes","title":"flowchart 0.5.0","text":"New arguments text_fface, text_ffamily text_padding change font face, font family padding text inside box New argument perc_total calculate percentages respect total number rows New argument offset add space distance boxes split, offset_exc add space distance exclude box filter New function fc_view() view $fc element $data element, associated flowchart New argument title fc_draw() function add title flowchart, along additional arguments customize New argument title fc_split() function add title box split, together additional arguments customize Bug exclusion box margins","code":""},{"path":"https://bruigtp.github.io/flowchart/news/index.html","id":"minor-changes-0-5-0","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"flowchart 0.5.0","text":"Added minimum version dplyr (>= 1.1.0) Bug fc_export() function using format argument Replaced evaluations tidy evaluations using rlang::eval_tidy()","code":""},{"path":"https://bruigtp.github.io/flowchart/news/index.html","id":"flowchart-051","dir":"Changelog","previous_headings":"","what":"flowchart 0.5.1","title":"flowchart 0.5.1","text":"CRAN release: 2024-09-27 Changed license GPL (>= 3) license","code":""},{"path":"https://bruigtp.github.io/flowchart/news/index.html","id":"flowchart-060","dir":"Changelog","previous_headings":"","what":"flowchart 0.6.0","title":"flowchart 0.6.0","text":"CRAN release: 2024-11-08 Added box_corners argument fc_draw() allow drawing boxes without round corners; default set \"round\" avoid breaking changes (#2; @kenkomodo) Updated fc_export() include vector formats (svg, pdf) use ragg place grDevices relevant bitmap formats (png, jpeg, tiff) improved performance image quality ragg installed (#16; @kenkomodo) Methods S3 class fc correctly defined Bug hide = TRUE option as_fc() Bug specifying sel_group N time fc_split() Bug specifying title fc_split() number splits different two","code":""},{"path":"https://bruigtp.github.io/flowchart/news/index.html","id":"flowchart-070","dir":"Changelog","previous_headings":"","what":"flowchart 0.7.0","title":"flowchart 0.7.0","text":"CRAN release: 2025-01-20 Solved bug sel_group used repeatedly flowchart Changed y-coordinate distribution boxes using fc_stack() unite = TRUE performing multiple splits flowchart, group label stored $fc concatenating values different groups separated ‘//’ Allow expressions label argument produce bold italics text, even formulas","code":""},{"path":"https://bruigtp.github.io/flowchart/news/index.html","id":"flowchart-0709001-development","dir":"Changelog","previous_headings":"","what":"flowchart 0.7.0.9001 (development)","title":"flowchart 0.7.0.9001 (development)","text":"Solved bug perc_total = TRUE used together show_exc = TRUE. Solved bug applying fc_filter() box missing values. Added big.mark argument fc_draw() allow users insert thousands separator values n N printed flowchart boxes (e.g., big.mark = \",\" results \"1,000\") (#26; @kenkomodo) Updated package functions throw warnings using cli; added dependency cli (@kenkomodo) Added test suite package functions (@kenkomodo)","code":""}]
