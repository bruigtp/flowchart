result = "Not played",
jornada = 1
) %>%
relocate(jornada)
dat_match <- dat %>%
arrange(match_2) %>%
mutate(
pair = paste(participante_1, participante_2, sep = " & "),
team = rep(1:2, nrow(dat)/2)
) %>%
dplyr::select(team, pair, match_2) %>%
pivot_wider(names_from = team, values_from = pair) %>%
rename(match = match_2, team1 = "1", team2 = "2") %>%
mutate(
set1_t1 = 0,
set1_t2 = 0,
set2_t1 = 0,
set2_t2 = 0,
set3_t1 = 0,
set3_t2 = 0,
winner = NA,
result = "Not played",
jornada = 1
) %>%
relocate(jornada)
View(dat_match)
openxlsx::write.xlsx(dat_match, file = "MatchInformation.xlsx", sheet = "Game 2")
sheet_write(dat_match, ss_dat_match, "Game 2")
View(dat)
sheet_write(dat, ss_dat, "Sheet 1")
sheet_write(dat, ss_dat, "Sheet1")
runApp()
dat_old <- readxl::read_excel(file = "TeamInformation.xlsx")
dat_old <- readxl::read_excel("TeamInformation.xlsx")
dat_old
dat_old <- readxl::read_excel("TeamInformation.xlsx")
View(dat_old)
dat_match_1 <- readxl::read_excel("MatchInformation.xlsx", sheet = "Game 1")
View(dat_match_1)
runApp()
dat
View(dat)
dat
?relocate
names(dat %>% relocate(all_of(starts_with("participante_")), .after = last_col()))
runApp()
runApp()
runApp()
rsconnect::deployApp(r"(C:\Users\psatorra\Documents\Padel)", account = "psatorra")
dat <- read_sheet(ss_dat)
#Jornada 2:
#Fix matches:
dat2 <- read_sheet(ss_dat) %>%
arrange(-n_win) %>%
mutate(
match = rep(1:(nrow(dat)/2), each = 2)
) %>%
dplyr::select(id, match_2 = match)
#Jornada 2:
#Fix matches:
dat2 <- readxl::read_excel("MatchInformation.xlsx") %>%
arrange(-n_win) %>%
mutate(
match = rep(1:(nrow(dat)/2), each = 2)
) %>%
dplyr::select(id, match_2 = match)
#Jornada 2:
#Fix matches:
dat2 <- readxl::read_excel("TeamInformation.xlsx") %>%
arrange(-n_win) %>%
mutate(
match = rep(1:(nrow(dat)/2), each = 2)
) %>%
dplyr::select(id, match_2 = match)
View(dat2)
dat <- dat %>%
full_join(dat2, by = "id")
dat_match <- dat %>%
arrange(match_2) %>%
mutate(
pair = paste(participante_1, participante_2, sep = " & "),
team = rep(1:2, nrow(dat)/2)
) %>%
dplyr::select(team, pair, match_2) %>%
pivot_wider(names_from = team, values_from = pair) %>%
rename(match = match_2, team1 = "1", team2 = "2") %>%
mutate(
set1_t1 = 0,
set1_t2 = 0,
set2_t1 = 0,
set2_t2 = 0,
set3_t1 = 0,
set3_t2 = 0,
winner = NA,
result = "Not played",
jornada = 1
) %>%
relocate(jornada)
iew(dat)
View(dat)
#Jornada 2:
#Fix matches:
dat2 <- readxl::read_excel("TeamInformation.xlsx") %>%
arrange(-n_win) %>%
mutate(
match = rep(1:(nrow(dat)/2), each = 2)
) %>%
dplyr::select(id, match_2 = match)
names(dat)
#Jornada 2:
#Fix matches:
dat2 <- readxl::read_excel("TeamInformation.xlsx") %>%
arrange(-n_win) %>%
mutate(
match = rep(1:(nrow(dat)/2), each = 2)
) %>%
dplyr::select(-match_2, id, match_2 = match)
dat2
dat <- dat %>%
full_join(dat2, by = "id")
dat_match <- dat %>%
arrange(match_2) %>%
mutate(
pair = paste(participante_1, participante_2, sep = " & "),
team = rep(1:2, nrow(dat)/2)
) %>%
dplyr::select(team, pair, match_2) %>%
pivot_wider(names_from = team, values_from = pair) %>%
rename(match = match_2, team1 = "1", team2 = "2") %>%
mutate(
set1_t1 = 0,
set1_t2 = 0,
set2_t1 = 0,
set2_t2 = 0,
set3_t1 = 0,
set3_t2 = 0,
winner = NA,
result = "Not played",
jornada = 1
) %>%
relocate(jornada)
head(datr)
head(dat)
View(dat)
#Jornada 2:
#Fix matches:
dat2 <- readxl::read_excel("TeamInformation.xlsx") %>%
arrange(-n_win) %>%
mutate(
match = rep(1:(nrow(dat)/2), each = 2)
) %>%
dplyr::select(-match_2, id, match_2 = match)
names(dat2)
#Jornada 2:
#Fix matches:
dat2 <- readxl::read_excel("TeamInformation.xlsx") %>%
arrange(-n_win) %>%
mutate(
match = rep(1:(nrow(dat)/2), each = 2)
) %>%dplyr::select(-match_2) %>%
dplyr::select(id, match_2 = match)
dat2
dat <- dat %>%
full_join(dat2, by = "id")
dat_match <- dat %>%
arrange(match_2) %>%
mutate(
pair = paste(participante_1, participante_2, sep = " & "),
team = rep(1:2, nrow(dat)/2)
) %>%
dplyr::select(team, pair, match_2) %>%
pivot_wider(names_from = team, values_from = pair) %>%
rename(match = match_2, team1 = "1", team2 = "2") %>%
mutate(
set1_t1 = 0,
set1_t2 = 0,
set2_t1 = 0,
set2_t2 = 0,
set3_t1 = 0,
set3_t2 = 0,
winner = NA,
result = "Not played",
jornada = 1
) %>%
relocate(jornada)
dat
#Jornada 2:
#Fix matches:
dat2 <- readxl::read_excel("TeamInformation.xlsx") %>%
arrange(-n_win) %>%
mutate(
match = rep(1:(nrow(dat)/2), each = 2)
) %>%dplyr::select(-match_2) %>%
dplyr::select(id, match_2 = match)
head(dat2)
dat <- readxl::read_excel("TeamInformation.xlsx") %>% dplyr::select(-match_2)
dat
dat_match <- dat %>%
arrange(match_2) %>%
mutate(
pair = paste(participante_1, participante_2, sep = " & "),
team = rep(1:2, nrow(dat)/2)
) %>%
dplyr::select(team, pair, match_2) %>%
pivot_wider(names_from = team, values_from = pair) %>%
rename(match = match_2, team1 = "1", team2 = "2") %>%
mutate(
set1_t1 = 0,
set1_t2 = 0,
set2_t1 = 0,
set2_t2 = 0,
set3_t1 = 0,
set3_t2 = 0,
winner = NA,
result = "Not played",
jornada = 1
) %>%
relocate(jornada)
dat
dat <- dat %>%
full_join(dat2, by = "id")
View(dat)
View(dat)
dat_match <- dat %>%
arrange(match_2) %>%
mutate(
pair = paste(participante_1, participante_2, sep = " & "),
team = rep(1:2, nrow(dat)/2)
) %>%
dplyr::select(team, pair, match_2) %>%
pivot_wider(names_from = team, values_from = pair) %>%
rename(match = match_2, team1 = "1", team2 = "2") %>%
mutate(
set1_t1 = 0,
set1_t2 = 0,
set2_t1 = 0,
set2_t2 = 0,
set3_t1 = 0,
set3_t2 = 0,
winner = NA,
result = "Not played",
jornada = 1
) %>%
relocate(jornada)
View(dat_match)
View(dat)
dat2 <- readxl::read_excel("TeamInformation.xlsx")%>%
arrange(-n_win) %>%
mutate(
match = rep(1:(nrow(dat)/2), each = 2)
) %>%
dplyr::select(id, match_2 = match)
dat2 <- readxl::read_excel("TeamInformation.xlsx")%>%
arrange(-n_win) %>%
mutate(
match = rep(1:(nrow(dat)/2), each = 2)
)
View(dat2)
View(dat)
View(dat_match)
sheet_write(dat_match, ss_dat_match, "Game 2")
sheet_write(dat, ss_dat, "Sheet1")
runApp()
dat <- readxl::read_excel("TeamInformation.xlsx") %>% dplyr::select(-match_2)
dat2 <- readxl::read_excel("TeamInformation.xlsx")%>%
arrange(-n_win) %>%
mutate(
match = rep(1:(nrow(dat)/2), each = 2)
) %>%
dplyr::select(id, match_2 = match)
dat <- dat %>%
full_join(dat2, by = "id")
dat_match <- dat %>%
arrange(match_2) %>%
mutate(
pair = paste(participante_1, participante_2, sep = " & "),
team = rep(1:2, nrow(dat)/2)
) %>%
dplyr::select(team, pair, match_2) %>%
pivot_wider(names_from = team, values_from = pair) %>%
rename(match = match_2, team1 = "1", team2 = "2") %>%
mutate(
set1_t1 = 0,
set1_t2 = 0,
set2_t1 = 0,
set2_t2 = 0,
set3_t1 = 0,
set3_t2 = 0,
winner = NA,
result = "Not played",
jornada = 1
) %>%
relocate(jornada)
View(dat_match)
sheet_write(dat_match, ss_dat_match, "Game 2")
sheet_write(dat, ss_dat, "Sheet1")
dat
runApp()
rsconnect::deployApp(r"(C:\Users\psatorra\Documents\Padel)", account = "psatorra")
ss_dat <- "https://docs.google.com/spreadsheets/d/1URaD6eNO-9qQ2i6EpOG_pZqVtiu4zAyXN6VIVIjcfaY/edit?usp=sharing"
ss_dat_match <- "https://docs.google.com/spreadsheets/d/1fcauZoYy_HBStDmvDV9HgFzSfguV71Ls-QyjSUgmdHs/edit?usp=sharing"
######FIRST TIME######
#####JORNADA 4#######
#We create manually the column match_4 in excel, ordering by number of wins and preventing to have a pair that already played each other.
dat4 <- read_sheet(ss_dat) %>%
arrange(-n_win) %>%
mutate(
match_4 = NA
)
library(dplyr)
library(tibble)
library(dplyr)
library(readxl)
library(writexl)
library(DT)
library(DBI)
library(purrr)
library(tidyr)
library(stringr)
library(kableExtra)
library(googlesheets4)
rm(list = ls())
library(dplyr)
library(readxl)
library(writexl)
library(DT)
library(DBI)
library(purrr)
library(tidyr)
library(stringr)
library(kableExtra)
library(googlesheets4)
ss_dat <- "https://docs.google.com/spreadsheets/d/1URaD6eNO-9qQ2i6EpOG_pZqVtiu4zAyXN6VIVIjcfaY/edit?usp=sharing"
ss_dat_match <- "https://docs.google.com/spreadsheets/d/1fcauZoYy_HBStDmvDV9HgFzSfguV71Ls-QyjSUgmdHs/edit?usp=sharing"
#####JORNADA 4#######
#We create manually the column match_4 in excel, ordering by number of wins and preventing to have a pair that already played each other.
dat4 <- read_sheet(ss_dat) %>%
arrange(-n_win) %>%
mutate(
match_4 = NA
)
dat4
openxlsx::write.xlsx(dat4, "Team Information.xlsx")
dat4 <- readxl::read_excel("Team Information.xlsx")
View(dat4 %>% arrange(match_4))
#Read it with the column match_4 completed
dat4 <- readxl::read_excel("Team Information.xlsx") %>%
dplyr::select(id, match_4)
dat <- read_sheet(ss_dat)
dat <- dat %>%
full_join(dat4, by = "id")
#Write dat as old and to the current team information in the google sheets
openxlsx::write.xlsx(dat, "Team Information.xlsx")
View(dat)
sheet_write(dat, ss_dat, "Sheet1")
dat_match <- dat %>%
arrange(match_4) %>%
mutate(
pair = paste(participante_1, participante_2, sep = " & "),
team = rep(1:2, nrow(dat)/2)
) %>%
dplyr::select(team, pair, match_3) %>%
pivot_wider(names_from = team, values_from = pair) %>%
rename(match = match_4, team1 = "1", team2 = "2") %>%
mutate(
set1_t1 = 0,
set1_t2 = 0,
set2_t1 = 0,
set2_t2 = 0,
set3_t1 = 0,
set3_t2 = 0,
winner = NA,
result = "Not played",
jornada = 1
) %>%
relocate(jornada)
dat_match <- dat %>%
arrange(match_4) %>%
mutate(
pair = paste(participante_1, participante_2, sep = " & "),
team = rep(1:2, nrow(dat)/2)
) %>%
dplyr::select(team, pair, match_4) %>%
pivot_wider(names_from = team, values_from = pair) %>%
rename(match = match_4, team1 = "1", team2 = "2") %>%
mutate(
set1_t1 = 0,
set1_t2 = 0,
set2_t1 = 0,
set2_t2 = 0,
set3_t1 = 0,
set3_t2 = 0,
winner = NA,
result = "Not played",
jornada = 1
) %>%
relocate(jornada)
View(dat_match)
View(dat_match)
sheet_write(dat_match, ss_dat_match, "Game 4")
shiny::runApp()
shiny::runApp()
rsconnect::setAccountInfo(name='psatorra', token='FF7216AC2415CF92D071AE82CACA7042', secret='aQDYJ3oHP3V6IBP8ZblW/eJ6834ssQv+gOERmpWg')
rsconnect::deployApp(r"(C:\Users\psatorra\Documents\Padel)", account = "psatorra")
library(flowchart)
library(dplyr)
library(tidyr)
library(purrr)
library(stringr)
library(tibble)
safo %>%
as_fc("patients assessed for eligibility", text_pattern = "{n} {label}") %>%
fc_filter(!is.na(group), label = "randomized", text_pattern = "{n} {label}", show_exc = TRUE,
just_exc = "left", text_pattern_exc = "{label}", label_exc = label_exc, text_fs_exc = 7) %>%
fc_split(group, text_pattern = "{n} {label}") %>%
fc_filter(itt == 1, label = "included in intention-to-treat\n population", show_exc = TRUE,
text_pattern = "{n} {label}",
label_exc = "patient did not receive allocated\n treatment (withdrew consent)",
text_pattern_exc = "{n} {label}", , text_fs_exc = 7) %>%
fc_filter(pp == 1, label = "included in per-protocol\n population", show_exc = TRUE,
just_exc = "left", text_pattern = "{n} {label}", text_fs_exc = 7) %>%
fc_modify(
~.x %>%
filter(id != 9) %>%
mutate(
text = case_when(id == 11 ~ label_exc1, id == 13 ~ label_exc2, TRUE ~ text),
x = case_when(id == 3 ~ 0.8, id %in% c(7, 11) ~ 0.15, id == 13 ~ x + 0.035, TRUE ~ x),
y = case_when(id == 3 ~ y + 0.015, TRUE ~ y)
)
) %>%
fc_draw()
#Create labels for exclusion box:
data(safo)
label_exc <- paste(
c(str_glue("{sum(safo$inclusion_crit == 1 | safo$exclusion_crit == 1 | safo$decline_part == 1, na.rm = T)} excluded:"),
map_chr(c("inclusion_crit", "decline_part", "exclusion_crit"), ~str_glue("{sum(safo[[.x]] == 1, na.rm = TRUE)} {attr(safo[[.x]], 'label')}")),
map_chr(4:15, ~str_glue(" -  {sum(safo[[.x]] == 1)} {attr(safo[[.x]], 'label')}"))),
collapse = "\n")
label_exc <- gsub("exclusion criteria", "exclusion criteria:", label_exc)
safo1 <- safo %>%
filter(group == "cloxacilin alone", !is.na(reason_pp)) %>%
mutate(reason_pp = droplevels(reason_pp))
label_exc1 <- paste(
c(str_glue("{nrow(safo1)} excluded:"),
map_chr(levels(safo1$reason_pp), ~str_glue(" -  {sum(safo1$reason_pp == .x)} {.x}"))),
collapse = "\n")
label_exc1 <- str_replace_all(label_exc1, c("resistant" = "resistant\n", "blood" = "blood\n"))
safo2 <- safo %>%
filter(group == "cloxacilin plus fosfomycin", !is.na(reason_pp)) %>%
mutate(reason_pp = droplevels(reason_pp))
label_exc2 <- paste(
c(str_glue("{nrow(safo2)} excluded:"),
map_chr(levels(safo2$reason_pp), ~str_glue(" -  {sum(safo2$reason_pp == .x)} {.x}"))),
collapse = "\n")
label_exc2 <- str_replace_all(label_exc2, c("nosocomial" = "nosocomial\n", "treatment" = "treatment\n"))
safo %>%
as_fc("patients assessed for eligibility", text_pattern = "{n} {label}") %>%
fc_filter(!is.na(group), label = "randomized", text_pattern = "{n} {label}", show_exc = TRUE,
just_exc = "left", text_pattern_exc = "{label}", label_exc = label_exc, text_fs_exc = 7) %>%
fc_split(group, text_pattern = "{n} {label}") %>%
fc_filter(itt == 1, label = "included in intention-to-treat\n population", show_exc = TRUE,
text_pattern = "{n} {label}",
label_exc = "patient did not receive allocated\n treatment (withdrew consent)",
text_pattern_exc = "{n} {label}", , text_fs_exc = 7) %>%
fc_filter(pp == 1, label = "included in per-protocol\n population", show_exc = TRUE,
just_exc = "left", text_pattern = "{n} {label}", text_fs_exc = 7) %>%
fc_modify(
~.x %>%
filter(id != 9) %>%
mutate(
text = case_when(id == 11 ~ label_exc1, id == 13 ~ label_exc2, TRUE ~ text),
x = case_when(id == 3 ~ 0.8, id %in% c(7, 11) ~ 0.15, id == 13 ~ x + 0.035, TRUE ~ x),
y = case_when(id == 3 ~ y + 0.015, TRUE ~ y)
)
) %>%
fc_draw()
rm(list = ls())
library("devtools")
library(roxygen2)
setwd(r"(I:\CTebe\2_Projectes\2024_02Flowchart\3_CodiR\flowchart)")
#To create the package: https://www.r-bloggers.com/2020/07/how-to-write-your-own-r-package-and-publish-it-on-cran/
#1. Create an R project to a new existing directory and select R package
#2. Write a script for each function providing all information.
#3. Write a script for each built-in dataset, and save them in a data/ folder.
#4. Copy the license MIT file (from an existing package or https://www.r-project.org/Licenses/) and add this to .Rbuildignore: ^LICENSE\.md$
#5. Modify DESCRIPTION.md with the information about this package.
#6. Write a NEWS.md in which we will write the news from each update: usethis::use_news_md()
#7. Write a vignette: usethis::use_vignette("NAME_VIGNETTE")
#8. Specify all of the packages that we have to use:
# purrr::map(c("Gmisc", "grid", "tidyr", "dplyr", "purrr", "stringr", "tibble", "rlang"), usethis::use_package)
#usethis::use_pipe()
# Follow the next steps (we will also have to follow them in each update):
devtools::document()
devtools::check()
## Multiple checks ----
setwd(r"(I:\CTebe\2_Projectes\2024_02Flowchart\3_CodiR\flowchart)")
# available::available("REDCapDM", browse = FALSE)
# devtools::spell_check()
# devtools::install_deps()
rhub::check_for_cran()
# available::available("REDCapDM", browse = FALSE)
# devtools::spell_check()
# devtools::install_deps()
rhub::check_for_cran()
Authors@R
c(
person("Pau", "Satorra", role = c("aut", "cre")),
person("João", "Carmezim", role = c("aut")),
person("Natàlia", "Pallarés", role = c("aut")),
person("Cristian", "Tebé", role = c("aut"))
)
git remote add origin https://github.com/bruigtp/flowchart.git
